<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAZdEVYdFNvZnR3YXJlAEFkb2JlIEltYWdlUmVhZHlxyWU8AAAd5ElEQVR4Xu2deXBV93XHr96T
        hNCGhEAGbAwW+y4j9h0jLDabHYyNQWA2gzGLbQTYGGO84JV4qdc4dhzH8RI7bpZpE9JpUredcZtOp51O
        p5kGe+JJM51Ohi6pnT9vv5/fvb/HfdJ7T+9JFYl9f5o5IyS9d9+55/c937P8zu/i+b7vOYmvDdzix9wB
        HAAcAOJLfy70+Z5jAMcAjgHizASOARwDOAZwDBBzL3AAcACIbSiM7Y3H2euj9+4AEHP2cwBwAHBVQJzD
        gWMAxwCOARwDxNwLHAAcAGIbCmN743H2etcHcIyXcnzHADEHgwOAA4ArA+OcDzgGcAzgGMAxQMy9wAHA
        ASC2oTC2Nx5nr3eNIMd4rhHkGCBI/l0IiDkbOAA4ALg+QJzDgWMAxwCOARwDxNwLHAAcAGIbCmN743H2
        etcJdIznOoGOAVwn0IU/1wp2JbDzgpjnAw4ADgCZadBzX19aC+RVBtq7X9f61YY9d7zl3370XZ/vOw68
        2SOy7bY3/LVbv+pPXfSo37fhyLlel93mGRlwQHIwq5QNPORVX3mnN3D0cW/szAe8+dc95ek63vb93/T2
        3fWOJ71rDx5/r+3AsW+37W979/zeO9/2dx36lrkHvcZv3fsN/+Y9X/dv3PnaOxu3f61tzZaXdy3d8Jw3
        d/lZr3HeGa/h6vu8/iOOelWD7/D4rFy6ZPpb70GhfmPu9sbNerBL+t206zVfur2otWi7/sYXmxavedab
        ee0T5n678lUQAJZvfL5h045X/RtuedW/btMLvj48qyxa9YyvBfBnL3nSn978mD/lmkf9poWP5CWT5j7s
        XznxhK9F90v73fznurFKSZmkWFLU3rgsRvnlhz2BxSwSBll988vezoNveofufs+788R32g7f8/752468
        4+t3ZpFlQH/J+ud8LW5KP3REV37HvS3b+LwvAPjXrHzq5emLHhzOZw9tPFkwCNCv4orDXt2wNqPfrJYn
        PIErp344QMu6P0rTb/KCR4xTzFn6pI990b9l3bMfz1tx9ph0S6BfoSAoCABzlj0+7JqVT/sysD96+ml/
        8IQTGeWK8ff4l4085uvG/V71e/zS/tu0kJv90rob85RNfknfdX5JzQq/pM/iv9ZNYfyBIRCKowCwxsUz
        x8x4wJNhvC23vo63e0dOftB2x4n3DVvhOStueMGft+Ir/sQ5D/mDxt7t9xpwu19av1O6bQn063ezdN0u
        4O2DefwRU04ZwM5Y/Lg/bdFj/vhZp+4JQZioveqIWdTOmMDqJ3sYr8djt+593RMLZdQP8I2f9aA/YNRx
        6bFf+uyI6CcdZcte9bf6Yjp/eFOgn3GwhY98MnJK20zplywECAUBYMqC08NB4Mip9xsDaSGyyAGjJAZl
        EYurF/jFVbP84sp8ZaafrJxupLhy+j/ohlokV0sGSHpZAESNO2H2Q5481hOde1r0Jnn9z0T7PozVvPoZ
        /+r5Z/yrGk/6WjgZdq90u6mjblVzpeuiAHh1Gw04RNsG5KOmnTaAGDzh+E+kQ7llI3TIBgKrnxbTE+g8
        AdB4faifCUFR/YZMutdXeNHn7tLn3yA9loa2mx3YrkrfZcuSPkvkIOsFhluMk8GWVr9Bow9uxUb5MkIP
        AQDP4iY2+smq2T+XMoe7IbfrvVsk10iGSHpbAOCB9SOPevIYT+HJGne9aN9v3feGoW8WngU0Cx96PMYr
        7tNsAJbo1fCBl+gFhR6yOibKRr9TXDnzr0r6rpWRW00oAvADx9zt9xve5pcPuu37em0fSSnelgkAUXAq
        pHmK197uw2+x+LuUh5h8Awq3+vUZcmcQ8vR5JbUrzUIny5v+A/2KktX3R/UrKq49nSxv/GO97jPYi/eh
        F6wme/hVg27ZoddXWJDmCgs9CICdQukGAHBeCpyQHJfcJbmjQDBkBAAJFTFVociTIY3na+F3EefxqjnL
        zhqKxDACSrj4u41nFfdZ7CcrGn9VlKx8XLpA63dLAEGafonSwWdL+677DUwAeKBdcy1Rc0nfNejV14Kg
        fV5CTqLPToFTySb6tcFKSuJMHFc+4OsefL02pPvtWvzV8vT5fqL3WJgPndANORrRD7Aekv7HS2qu+zlh
        QgmyATk66t//XVw9f7ZeU9UZCHoQAAEDCMkAgBvBYNskmyTrC5C1em1aCMC75DEmoVJO4smbiPm7oFSS
        O2IieQjGMHkIoUpxHW8pqVkuA8/4vChZ9RVd995Qt4P6vlOyWbIxlBv1vTVRMvCE8oLP8bKL11II6b/t
        1/r7aEmtpESSSk7RjxxBIcPEfKoQ6ddGLmKrm3T9CJnKleo2GXAmysf/k653UoLjtIW2w6vR7wbJhvA7
        P+8s6XfTp+gHOFNg77/9b/Q3GJMEmrwg41ePAqAUb6u+5hf6ZBCLstD4ZMm4AmSMXpuWBEL9ojtPyZmn
        isTTwjdhXBafHAUqJJamFsxQvwAJ9VcvFO0P/Z6uyeJj3L3hgjfr+1TJRMkECTkHXrRUiegrMAD5QAAm
        5TdKFuWpp/T3YRI8LWlZoFJlohbYk5d7KikpQdeL/n1l/iZpI5ToNRFAkezh/aL+qjm/K0r0OqPrwUx3
        ssASnADbWf3Gh3pO0/dFxZUz7kcvrmkZCkDJ+fbr71dIekuoEjp8XSoA3KZPXhUalkSuukBJKwMttRJX
        Rf21Wvzz0CrZ+uXj7kk3rlmwMLaSkFZOw3PxLij1VslqyXRJg6ReUhNKnb4PkoyUzKoefOh/a4beFRrY
        MAAVynf1txkSKhQSryJCE/qR9K28yejXIPq/YMHZYfFT7ETCvNRP9h77l7oOns/ib5cslQBGvLm/BMYh
        /+A7+l4lmVIz5PZ/JU8xuYQB/B4x8CbCSGP4PpOvSNK+LhUA8LJlErylotAGSvT1eJeyZdNE2bz7656M
        +6K+m54DWXQa7dsqhYpEJWhxnxZ5/zAWjZhKSCIU4UV4STRpwlB4DEYDrFfWD9v9uhpMQfVjACUA1K76
        pf62XDIqfF2CJlFUPwHgHZOTKOaTjKYzU1hFGfonN7nWLyqpf1HXApy7Qpvh7Sw8Xmz6IBHhZyqSAQNG
        7n0V5iPngQ0AAAllsnzCPv0dBoWlOrDAFwoAxFYSP0o+vF+xv1k1tcmm6UuQBF2kfVuiBrU+fYXi6ma/
        KFH2sAxBske5NE+CZ7H4ifbADA1N/KwYOuHQGZI2QBDU5wKAktyiZB8oGmrGG0us91v9aDrRVKKEhEGy
        60d4WvQ7XQPvPyABnE3hdY33Zko0w0UtGzJ+3270owpIAZQcrGrOm3oNIL9M0oEFvlAAIPaL4k0nbX3r
        K56Me04dPxNXaTyZbLp9b8IsFvF1lcq+mSSkeD8h6XoJuUiNJBW/o0bm86jh+fvIyQdXq9Fk4rfpI4hR
        iNnyWBJc4vOVkjIT+5ed9RSSaEidW7X5JVPqsTCpHCKqo9HvFqoKWzFxPbyfnAR6x8M7gBM9CTeUwfy9
        YdKhlTAM1YBJdsknxHgl1QthqSUSWIBQmsYCXygAkPnbzFrJXwNxf4GoH+RnpH4b//ttlUGuEx2OOycD
        kPhRjeD9UD8t5g7ehYEBAPsK/H3stGPL+RxDr6bBpWpCTSPV6U/r7yskI0IDF1279lmS02b0IzTRgMpI
        /UY/C9DV0m/yh7oGsZ+EGa81rJItZMKIMA76DRi5f1ag22Yt/JKgcVQx5UKy9zgSXiobku9+EsJG6usL
        AwBulnYvmzJ01GTcM6LZ3N5lDEzXL1iwRNmwt3XnVCSUUY0S6viM3o/RqeVp4VJuDh5/ZCn0HRi4JTTw
        tAtFxX1P6xpk6bAJyVkR+m3Y9soZWs85vT+aoMJQ5RN/pPdD/9HrZfR+9LPlMGFRIWlUKUCvWaIeR9Mn
        idIr39N1SHaPSFolcyQktYSBLx4AWAzon40esmvV0+fZlyC2BplvlrZ0mACW1Czz1UF7QndOQkrilvLY
        bB4GxVLP42Uq/ZZArXhXsmJy1MB0OfGwSSGgEsR/haYLC69/2h82OWCnrPqZDS8YaqWfLBvxVkQ/KJvc
        JCM7WQBgF/4t3UaU1K75qaoIwtvNEpiEcAfgb5JQ0gIAqpWeBoDiUP1u02+Xt9AHSKsCFKu8TEL8VIw1
        Bmdbl5uzbVaya1Gp2ZplGxTvouFD2Rc0PzIBAD0oh4K+uvQgvtJQWSgZLCnLVZHYdi7b0PKwFi3SdzMY
        GINTSpKtU5oBgCa1ps0GEjlDxtzE6msbVLXX0594Re+38T+t7Z2zcrqMct80e6B4qJ4Eck9od8IJjTR6
        G/z9UjCAOltQL8lX3zUdAEB3LJPQ1SPBY9cMIAACCwBl0Cb+K+Z7yzY8d5TMWtWAKXs6ZtbRCoAG0AbV
        7M0XdPPQIfsK7JrRj8gaX9MMrlkEfRE7KcemSPB4eggAm87mfAl9BJNkoR8bUOzq5dYvEqKUoyicPKr3
        U/uTn1wuSW185S6dqWhNclcjoTu5WLJKQm6C5/M77peEMq0r2EM5QJDcBPv5WzsAgL59JmGbVFmzJ88x
        dE/Nb28cKqbvDwC0T/4S27q2tMpKr9HNn+p5VADQIguGl9DoyRr/0wFgPAwA8B48HY/C6wklgIlwktoX
        iOqXMzylcpTNYigAUPeIrkN5OitcsPwAqhCgLwBAyAA46EhIYuGh/RoJyW6HreKeA0DYmoSioULKIWr2
        XFNE1MzKoE3c1AI0B5NA+w0ICAswAwBYvOaZvxNTmMYP7c/s8TXYTzc9gKrZ9NeJh9AjBjIJW35NKfIy
        YzyaKZR70CkGpgGEge3OYIIGVfPqp/PTrx0AdB36E8RvWwEUk4TS9iY8Zgud/J57kbAnAQsBVIQmFjE/
        64xAjwIAaiYBIg6yX60MPudEEHU2zRzTuKldTZ0OoolZ5gZoAGFgJVcXmN4BXLnjq62xBYDKGX+ra8CV
        q8KFq8pv8YMRNH1FO4PE0g4GZlu6IP2iAFAI0DVhKDahUgwFGwJ6hZSMYTMaSkMdYSqAwPdOp4R6DgDU
        twVOA7F7SMPGDEJUTKVWJxGCWs2AA/11kkDon7Gx1NRRtgrA1tja19f1/kLXoC0KbZsMu0AA2PZwBwOT
        p+CpAJQmEFM9TB11ql9HALBVzm4f7GISShpKhEu2k7OFTvt7UFroVw8BoKsTQTPCKaCZqtlHwGskQywW
        FJsEAOqpNzBnqHDgqy+QIwGMNFkUApLlV/9Q1yAzJn6TsJUXAoDOqoUUAJY+WZu3fmkAuB4GsCUlIaZG
        UqSt5HMaYPWZI2CesZBB3PbDtZnA0UMAiE4EzerqQAiLRUOkUWI6WFCs+gANlH/0/hmmyJ4AtgNAxeQ/
        1TUKL7FyTCFbUFgGIEeJ6mc3ZnLrSKNKSaDKwBAANKlMU4ntZO1znGOyiY4iW92EPnY9YRn6IFQb2YZz
        6UPAlORJKmM7DNcCiB4EQLcngjoAgNHnqQsfHoYROp9LzAgANm5Sffv/TwagS0mVMmXhQ0Y/KpROAZqZ
        AUhSAUA1u4pilh+b7V3tFwSDqxpgZQJI4Y18iR1AhksyDeiafQvaw2bncmWH4doeBkC3J4JIAtNCgBJJ
        r3HuqeGMR2Pg3IOpFgBstKynPQoD3CJZIGEPIM8aO2i50hWkLGU/AqExZRtVtidPn2LinFN9af8yjtap
        fp0AQAtPA+rPyIs0WMPOXjAUqrkGwMDgLZs/nfVBwq1mZgPSJqt6HADdnAiixEpLAjHw+BnH66gmKBU7
        NXA4Vm2GUyua/iQEAE2bggDA4rPoNKe0sMbT0YXyi9hPk4pdOX6nL5JVs0HVqX6dAaCeXpOZA8AOMBdN
        LCqZw8ne41+AGaD37JVQEIoDADT/S/h+rmO6jJcSAF2ZCKLmTisD2ZQpzMDhLAAGqJz5E72XLlvBAGBX
        kIUmB6Ek47QQO37EaBJTqJo63QJg/KwH/pMdwPwBoM0q7QWwsJJUCFA3NSsASqqaXoDiOT+Qfa8hAoBg
        NC+tJX8pAdDtiSC8jFM5AGDcrAc+sQbOTn+0g60BNA1UNe+jrjKAnUNQ8skmT5sGUc5or7+NriVlKaEJ
        NhAroV/RqGmn/p4mFTlAbv2ireBVHQGgEKAvSmDauIyFQeEkxuv7D25+gEqIz2HQJHOi+SUCAPsCtuOF
        gQWGzvvsDEfQizBbuIv+MQTAAn0vKATYIVQld9qKfn43HUuE43HKzC8MHH2MTaYiQgTfh00+8R0Oa1AF
        ZBwCSRsICaeVNQ5elKjgAhcZIGhA0Xegu8fcISUxQ7LjRkzcspNkk1AYnHnItBn2JQIACZg18PDJ97wK
        8ukD5OwE2gletnFrlv9KhutSFUCyx2QQIUDn8BYzgoawAGYES8lYuEim7Tp4fNu9ZObol32nMlwwsxuo
        7WA1q4qK+z8YAUCfsANJAwoQ0MsHCGagduLMu1bHCgD2oAWxdsiEo/dS9mD8vAxsyqC1n8tw9AHYKRsq
        SZ0w6qwcJAkEANT5k+fdN4KzkSSidPrMtrfGwzTMwRYzc3cV9cN2zaM8yw8A4YCpmlU6iPKk3k8fIONe
        hZlQEsvQcZy68MGWWAGAUos8gIUYMGLvHPYBAEDOzaDUxI1qaCWCRSUD6C4yH1dQJ9CGAKaRpi44OZJG
        FGVoMH8XJHCJ0itadV3iNPG6dsCoY/9FCGAULHcjCACwbb6B7ucLei9bzZxNoBWctlkVawDgpYSBcAau
        d94Gtomg8gCdp2Pg4joJs/6VnXm+/Tv5Bwko00jzVzzewrEzGlFmnk+neRg30zEtKh07fFlX13DgDWJz
        1lnA1EBIuGMpgCYrrn5X12C7ulHCHkjaOFjsAWBHtGSY0rqGg9/Iy8DyUnNSWWFAp4J+rPemze91BgKY
        h+cOcPScgZWl65/dwyAqjR5OCJmt5j6LCS/Rrea6igFb1tmTOvlWKjqs+gNdh/Ethk5of6fNK8QeACwG
        LKCv4oqBW9fmZ+DwZBDPAajb9JvQw6DqvAZCoiUgs34q/V6iB0+SZ2YN1MNPVpr9DhSz9I331oghPiVM
        5AwBFqBm3rCFbh3zAJxUIp9IexZC7AGAt8ICUKOkOj8Dk23bEbUdhAHGrlITN5mOdltWsMe8yP559oDO
        +dVq2vcCIYBJn9I6M/Oo41xjGDePMkCNfi4v7bthL1NRZjpKoSj74EqYB9SuolJpldgBztIoQ1kwctx8
        evPDLQzawESxKAOjhpCBKI16BwbeZ0bPchrYxFstgOYUS+pu/Ge9l0MXQ7kG12oPAn6m6mDcmiaPfaqH
        tmbbOOPHLCKHL4PDnPM5HXRW17HDJoxh0cVkKKO+tN+2j0zPPpeOZnaCIdqtSiYvp6ewQMLQaq+objYX
        oSE1Z9ljLUxFkYvEDgBhfRwauPUjmj0sbuBpHSk3ekqY16gvDguMlTBnkIhOILPwtu+P5/PsAT1sghO+
        TTxICvqn9WqeM6ANGvXkOYZNA4fGfarCsCylPYhmZfm/pSd/Ucf2TRsYSiyg1yifeF/vTc0s4PUwkT2l
        pI0mZiI1GPvMDWz3Mmn1BwiAro2FZxsVZyaOzRbKQAwRGdGq1oy+DNz6W7NFmvK0zCCgK0ffgJO+5TWT
        SQbprpnzcoyc09OnnWsnj3jCGE/10IMdGnQE/TwHUeg/BOcDFnPS+DMd5X5I7+d4DtQ9V2Kmeblm+H2g
        dvFu56AmW7owR8AG7XUEBAJw/a2fJUr6kwjS8aPpYx5MJU8X7T9mzkTyDKRNO772sj1zmH3w9PfWCeza
        WHi2UXHGrFgUAAIIoMWogQWCbcEDnmRknuYBG7SLubAAXUOMRQNn6KQTvx06dgtjZ2baiAyfzw9PHZnx
        Kz3KhSeMrZf3X+AMIvsPfIaJ+3q8jPoKL+u990jsaR57OMQkb1w3XMSRqkCeImcw+/lWR8NYARugHwCF
        XfoPO/BxeXUDjSXG0IvRyy48j7vThFATrWiGRGg5B91QQhz5RjTn+L0BoGtj4Zlm3nj6h+Ku2XnDE6Dr
        IB9ITeriJSOSFVPatO//mXkSmQFClHIDb8PI1OV06NiuZd9+7rJHv7903Vnmvs3gqZ41YJ4wpsfKtQkA
        56B9HslGUyc46KJnC1VMY/Gf0+uhfryfXUa2WYdKmL03DZwQpDAMC9mYLJ900jzcSeEjExBgJzaQaHNP
        mnv617MWn2RMnB3RxK13vA0T1eoZQ+ZJI7ARm0Gm0WTKXAZGtkacgNyI3CLcDr60u4EBqinTChkLzzTv
        xig5p2y4WRmo7eKouAEANGsNPClRNvJwSZ+lv6Svbp7yFT72LQDDxUQMvdhGJYGiq8fz+Eju8Coe3oRw
        sJN4z6aTeboIQxl6iphmC/89nN/nWC7CTifDK8zxUf6llW4snoRkk9AwXecTj+opX5/yLCC6f2bKR53A
        FGBlNzqcTEgz/ArziPLNPCDCsxAYAwtG55kUCo6pc66AYVrKUuME5p6DvCIyl9G97eBxM04OpwWaetQa
        tXVWkQLhxAo3hLGZT8v3YZH2dSw8lB0+Q4fHuuAR0Vl3a2Dm8zmnv1aJ1wd058zj3pgyNl63KQSEnlnI
        s/fCWIzXceYfRuDeoHnzeda4ZhpnoSh/mlq1oz7Q9Un2OGGE5zNlvC78XD4/40lj/R52YSOHQQxK0A3a
        O/iWgPD5RR3XhTraELHfsAF6ccKIIRMSvuD8f7iDqCPl5qAqwOSxeuWN57Wf8HqyYuq5IOcInjFoHjxV
        Pa/78wD1ww8PDwyjR5nxIEeVQbkFlMsbQTq0l/eDIi8+UNKc69ONBsexFzwu410lsU/MMK3S0MAAg9KJ
        QxWc2tmlp2P8oLhyzr/xYAiSNk7OBgZHbwHDeCH66V4EkuCeGEtfZo5+M4IlY/6PevSveYkyFp5QweEN
        mj52ZpGmDZ/L52c8aaTf2x09ysOhEh4rs0ayO9F7zLfVSPpFSkeeAWh0RDfpA5MBXmMH6SgP50kilJ8a
        cpF+Uzj1/FMdfOXJIgxM3FtU3O8J06IOmYF7SVbO6D4AetXvGB48YFEGqppXwIMf831AZKbX2VFxfS9v
        fF03SKylhKOTZ45OhQbGy1gE9vo5WMGzdRihYtGOqFnzw2TZ6B/J836Gx5iHLqYeXDmTgyPGy0XxHyuU
        fBMpStZwceI71EnmycQO12uVcL6gKfw8vJst26wnjUIdeQ0gADBWRzp/MMldAtoHRsfe4z7MpKPxcuUf
        eo7h9xJlw98rKrnseb2PBxjAjGx00UNAx71irQ8tO5h7q5jSfQDowtAtca5RwqYFnnBfJwIqUQ5Frfeg
        ZFcEQ3FwAg+yJZz+ab7wMkBAEsaDFWjIUJatknDezi4i9I2hSOAwnPGa8GdondM5LDZJBs0d+533UzXg
        uYyVAcLogUs+v7OvTDrS9SOHAAiwykEJdiK/wGaI1QubYXN05D54jf0bunLyGfsAThyA8MQ1eR33270c
        QBcAADUSxpZXSnZLurKQXX1PLgBgfHt6hxyB8g5PY299jmSZhGkbWAFDWUo/2O4e7OLzWQyQtIZGZReR
        KWW2ajkfyHatObEUfi6fn89Xex1JDgETuQGNJBaNI91MMLN4ME57HfmZ3/N3GIrjZKsksCOsxEAtDkB4
        ArDMQfB67p3XdG0oVG/kZqG7oRKQi1Ew6qUSe5OpEKDPzvRlPY3sm4UiQeMEL4sHeyyQYGxAbGbsIsIC
        kEPgRYvC+2TzCKMSXmBArmsoP8vn5/NrqyOJI2CF0YZJqCZYOFiGjiDs0F5Hfub310oAJbuH2ISFJT8i
        zNRIACo5EWzAPXVvLDy8Ycoue3GMAhtcKgHVaUlgJ5a2RsZTAS5gYJcNZmiQoL+ZsYsIhuRzmL/DgCwM
        +QZGZbG6u/DtVbY6YldyGHQkhAE27pXZhfY68jO/5+8wCIsOiCwwcVSbb9hZQntP/GxzlsJOBoWac3GU
        JdZiFDOjdgmlfRnY3qDZfrbUyx4CgED/1IxdO/25Lz6HBU+dTs73g7rxOqsji9eZjujOgvO6TCeBbeXB
        PfBa7onvaSAu6GhYN27MvfUP1AJ5AcD9x4rx+C/l3P8a5v7XsHgg3TFalv8dzhkm3g7gQoALAfH2gLgz
        oGMAxwCOAeLMAo4BHAM4BnAMEHMvcABwAIhtKIztjcfZ691mkGO8lOM7Bog5GBwAHABcGRjnfMAxgGMA
        xwCOAWLuBQ4ADgCxDYWxvfE4e71rBDnGc40gxwBB8u9CQMzZwAHAAcD1AeIcDhwDOAZwDOAYIOZe4ADg
        ABDbUBjbG4+z10fv/f8AHVKEZ2JVFVoAAAAASUVORK5CYII=
</value>
  </data>
</root>